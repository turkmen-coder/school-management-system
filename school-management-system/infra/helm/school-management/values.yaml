# Default values for school-management.
# This is a YAML-formatted file.

global:
  imageRegistry: ""
  imagePullSecrets: []

replicaCount: 1

image:
  registry: docker.io
  repository: school-management
  pullPolicy: IfNotPresent
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Service configuration
service:
  type: ClusterIP
  port: 80

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: school-management.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: school-management-tls
      hosts:
        - school-management.example.com

# Resources configuration
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment configuration
env:
  NODE_ENV: production
  PORT: "3000"
  
# Database configuration
postgresql:
  enabled: true
  auth:
    username: school_admin
    password: school_password_2024
    database: school_management
  primary:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"

# Redis configuration  
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi

# Kafka configuration
kafka:
  enabled: true
  replicaCount: 3
  persistence:
    enabled: true
    size: 10Gi
  zookeeper:
    enabled: true
    replicaCount: 3

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s

# Services configuration
services:
  iam:
    enabled: true
    replicaCount: 2
    port: 3001
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

  crm:
    enabled: true
    replicaCount: 1
    port: 3002
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

  billing:
    enabled: true
    replicaCount: 2
    port: 3003
    resources:
      limits:
        cpu: 300m
        memory: 512Mi
      requests:
        cpu: 150m
        memory: 256Mi

  payments:
    enabled: true
    replicaCount: 2
    port: 3004
    resources:
      limits:
        cpu: 300m
        memory: 512Mi
      requests:
        cpu: 150m
        memory: 256Mi

  notifications:
    enabled: true
    replicaCount: 1
    port: 3005
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

  documents:
    enabled: true
    replicaCount: 1
    port: 3006
    resources:
      limits:
        cpu: 400m
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 512Mi

  enrollment:
    enabled: true
    replicaCount: 1
    port: 3007
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

  exam:
    enabled: true
    replicaCount: 1
    port: 3008
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

# API Gateway
apiGateway:
  enabled: true
  replicaCount: 2
  port: 3000
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Admin Web Application
adminWeb:
  enabled: true
  replicaCount: 2
  port: 3010
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi