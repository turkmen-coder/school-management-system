name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8.14.0'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse)
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: School Management System ${{ github.ref_name }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Docker Images
            
            All services are available as Docker images:
            
            - `ghcr.io/${{ github.repository }}/school-management-iam:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/school-management-crm:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/school-management-enrollment:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/school-management-exam:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/school-management-documents:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/school-management-notifications:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/school-management-admin:${{ github.ref_name }}`
            
            ## Installation
            
            ```bash
            # Using Helm
            helm install school-management ./infra/kubernetes/helm \
              --set image.tag=${{ github.ref_name }}
            
            # Using Docker Compose
            export VERSION=${{ github.ref_name }}
            docker-compose -f infra/docker/docker-compose.yml up -d
            ```
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}

  build-packages:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        service:
          - iam
          - crm
          - enrollment
          - exam
          - documents
          - notifications
          - admin
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build ${{ matrix.service }}
        run: |
          if [ "${{ matrix.service }}" = "admin" ]; then
            cd apps/admin && pnpm run build
          else
            cd services/${{ matrix.service }} && pnpm run build
          fi

      - name: Create distribution package
        run: |
          mkdir -p dist
          if [ "${{ matrix.service }}" = "admin" ]; then
            tar -czf dist/school-management-${{ matrix.service }}-${{ github.ref_name }}.tar.gz -C apps/admin/dist .
          else
            tar -czf dist/school-management-${{ matrix.service }}-${{ github.ref_name }}.tar.gz -C services/${{ matrix.service }}/dist .
          fi

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/school-management-${{ matrix.service }}-${{ github.ref_name }}.tar.gz
          asset_name: school-management-${{ matrix.service }}-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

  build-docker-images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        service:
          - iam
          - crm
          - enrollment
          - exam
          - documents
          - notifications
          - admin
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/school-management-${{ matrix.service }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/docker/Dockerfile.${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-helm-package:
    name: Package Helm Charts
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'

      - name: Package Helm chart
        run: |
          helm package infra/kubernetes/helm --version ${{ github.ref_name }} --app-version ${{ github.ref_name }}

      - name: Upload Helm package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./school-management-${{ github.ref_name }}.tgz
          asset_name: school-management-helm-${{ github.ref_name }}.tgz
          asset_content_type: application/gzip

  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: spdx-json

      - name: Upload SBOM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./sbom.spdx.json
          asset_name: school-management-sbom-${{ github.ref_name }}.spdx.json
          asset_content_type: application/json

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [build-packages, build-docker-images, create-helm-package, generate-sbom]
    if: always()
    steps:
      - name: Notify Teams
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "ðŸš€ School Management System ${{ github.ref_name }} Released!",
              "attachments": [
                {
                  "color": "good",
                  "fields": [
                    {
                      "title": "Version",
                      "value": "${{ github.ref_name }}",
                      "short": true
                    },
                    {
                      "title": "Release URL",
                      "value": "https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}